#!/bin/bash

#SBATCH --partition=hotel
#SBATCH --qos=hotel
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --time=12:00:00
#SBATCH --account=htl100
#SBATCH --get-user-env
#SBATCH --job-name=MO_job


###############################################################################
# Run in interactive mode #
###############################################################################

# Takes a planfile of old and new filenames and renames files in rename_dir 
# to the new file names old_name must be a filename without the extention. 
# It must identify a single sample, but will rename paired-read files

# export rename_dir=${readsDir}/raw
# export rename_dir=${pReadsDir/}

# export plan_file=${renameFile}
# export plan_file=${pRenameFile}

export plan_crct=${plan_file/.csv/_crct.csv}

cd $rename_dir

# remove carriage return from masterPlanFile.csv > masterPlanFile_v2.csv 
# must use control-v then control-m to enter ^M
# sed -e “s/^M//” $plan_file > $plan_crct
# in vim
# :%s/^M//g
# plan_file=$plan_crct

# accNum=SRR12512644
# ID=rad51_00

while IFS="," read -r accNum ID || [[ -n "$accNum" ]]; do
   echo "searching for $accNum"
   echo "to replace with $ID"
# done < "$plan_file"
    echo $accNum
    id=$(echo "$ID")
    oldR1=$(find ./ -name "${accNum}_*R1*.fastq.gz")
    oldR2=$(find ./ -name "${accNum}_*R2*.fastq.gz")
    echo $oldR1
    if [ -f "$oldR1" ]; then
        base=$(basename ${oldR1})
        # sfx="${base#*.}"
        sfx=fastq.gz
        newR1=$(echo "${id}_R1.${sfx}")
        echo "$oldR1 found, will rename to ${newR1}"
        mv ${oldR1} ${newR1}
    fi
# done < "$plan_file"
    if [ -f "$oldR2" ]; then
        newR2=$(echo ${id}_R2.${sfx})
        echo "$oldR2 found, will rename to ${newR2}"
        mv ${oldR2} ${newR2}
    fi
# done < "$plan_crct"
done < "$plan_file"

# If there are special characters in filenames, this loop will remove them

# for file in *; do 
#     mv "$file" $(echo "$file" | sed -e 's/[^A-Za-z0-9._-]//g'); 
#     # $(echo "$file" | sed -e 's/[^A-Za-z0-9._-]//g')
# done
